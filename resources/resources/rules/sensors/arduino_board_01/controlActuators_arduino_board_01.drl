//created on: 06/05/2019
package resources.rules.sensors.arduino_board_01

//list any import classes here.
import java.math.BigInteger;
import java.sql.Timestamp;
import br.com.sintechs.stufa.drools.DroolsActionHandler;
import br.com.sintechs.stufa.models.SintechsSampling;
import br.com.sintechs.stufa.models.SintechsSamplingSensor;
import br.com.sintechs.stufa.models.SintechsSamplingActuator;
import br.com.sintechs.stufa.models.SintechsSensor;

//declare any global variables here

global br.com.sintechs.stufa.drools.DroolsActionHandler drlActionHandler;

declare SintechsSampling 
    @role( event )
end

declare SintechsSamplingSensor 
 	sampling_id : BigInteger
 	sensor : SintechsSensor 
	measure_type: String 
	value: Float
	rule_condition : Float
	created_at : Timestamp 
	updated_at : Timestamp 
end


rule "001-max-heat_index-arduino_board_01"
dialect "mvel"
    when
    	//This is for test propouse, the rule must fire with this eval
    	//eval(1 == 1)
        //SintechsSampling($sensors_sampling : samplingSensors) from entry-point StufaSampingStream
		
		SintechsSampling($sensors_sampling : samplingSensors) 
        $s : SintechsSamplingSensor(measure_type == "heat_index" && value > rule_condition) from $sensors_sampling
    then
    	//System.out.println("Ligar Solenoid #1");
        //DroolsActionHandler.addAlert("Ligar Solenoid #1");
        drlActionHandler.addAlert("Turn On Solenoid #1 max_heat_index ");
        drlActionHandler.addAlert($s.measure_type + ": " + $s.value.toString() + " MAX_HEAT_INDEX: " + $s.rule_condition.toString());
end

rule "002-max-temperature-arduino_board_01"
dialect "mvel"
    when
    	//This is for test propouse, the rule must fire with this eval
    	//eval(1 == 1)
        //SintechsSampling($sensors_sampling : samplingSensors) from entry-point StufaSampingStream
		
		SintechsSampling($sensors_sampling : samplingSensors) 
        $s : SintechsSamplingSensor(measure_type == "temperature" && value > rule_condition) from $sensors_sampling
    then
    	//System.out.println("Ligar Solenoid #1");
        //DroolsActionHandler.addAlert("Ligar Solenoid #1");
        drlActionHandler.addAlert("Turn On Solenoid #1 max_temperature");
        drlActionHandler.addAlert($s.measure_type + ": " + $s.value.toString() + " MAX_TEMPERATURE: " + $s.rule_condition.toString());
end

rule "003-min-humidity-arduino_board_01"
dialect "mvel"
    when
    	//This is for test propouse, the rule must fire with this eval
    	//eval(1 == 1)
        //SintechsSampling($sensors_sampling : samplingSensors) from entry-point StufaSampingStream
		
		SintechsSampling($sensors_sampling : samplingSensors) 
        $s : SintechsSamplingSensor(measure_type == "humidity" && value < rule_condition) from $sensors_sampling
    then
    	//System.out.println("Ligar Solenoid #1");
        //DroolsActionHandler.addAlert("Ligar Solenoid #1");
        drlActionHandler.addAlert("Turn On Solenoid #1 mix_humidity");
        drlActionHandler.addAlert($s.measure_type + ": " + $s.value.toString() + " MIN_HUMIDITY: " + $s.rule_condition.toString());
end