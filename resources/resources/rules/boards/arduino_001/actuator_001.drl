//created on: 06/05/2019
package resources.rules.boards.arduino_001

//list any import classes here.
import java.math.BigInteger;
import java.sql.Timestamp;
import br.com.sintechs.stufa.drools.DroolsActionHandler;
import br.com.sintechs.stufa.models.SintechsSampling;
import br.com.sintechs.stufa.models.SintechsSamplingSensor;
import br.com.sintechs.stufa.models.SintechsSamplingActuator;
import br.com.sintechs.stufa.models.SintechsSensor;
import br.com.sintechs.stufa.models.RuleEvent;

//declare any global variables here

global br.com.sintechs.stufa.drools.DroolsActionHandler drlActionHandler;

declare SintechsSampling 
    @role( event )
end

declare SintechsSamplingSensor 
 	sampling_uuid : Timestamp
 	sensor : SintechsSensor 
	measure_type: String 
	value: Float
	rule_condition : Float
	created_at : Timestamp 
	updated_at : Timestamp 
end


rule "001-DHT11#1"
dialect "mvel"
//no-loop true
    when
    	//This is for test propouse, the rule must fire with this eval
        //SintechsSampling($sensors_sampling : samplingSensors) from entry-point StufaSampingStream
		//$eventHandler : EventHandler()
//		$sampling: SintechsSampling($sensors_sampling : samplingSensors)
		$sampling: SintechsSampling(hashCode > 0) from entry-point "StufaSampingStream"
        //$sampling_sensor : SintechsSamplingSensor(
        //	(sensor.uuid == "DHT11#1") && (
	    //    	(measure_type == "heat_index" && value > rule_condition) ||
	    //    	(measure_type == "temperature" && value > rule_condition) ||
	    //    	(measure_type == "humidity" && value < rule_condition)
	    //    ) 
        //) from $sensors_sampling
    then
        //RuleEvent ev = new RuleEvent(drools.getRule().getName(),  $sampling, $sampling_sensor,
		//	"[arduino_board#1.DTH11#1] Sensação "+sampling_sensor.measure_type+" ativou condição empregada",
		//	"solenoid_1", true, "DTH11#1", "solenoid#1");
		//$eventHandler.addRuleEvent($sampling, ev);
		//modify($eventHandler);
		System.out.println("It works" + $sampling.hashCode());
end