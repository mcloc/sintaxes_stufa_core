//created on: 06/05/2019
package resources.rules.boards.arduino_cliematizaion_boards

//list any import classes here.
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.List;
import br.com.sintechs.stufa.drools.DroolsActionHandler;
import br.com.sintechs.stufa.models.SintechsSampling;
import br.com.sintechs.stufa.models.SintechsSamplingSensor;
import br.com.sintechs.stufa.models.SintechsSamplingActuator;
import br.com.sintechs.stufa.models.SintechsSensor;
import br.com.sintechs.stufa.models.RuleEvent;

//declare any global variables here

global br.com.sintechs.stufa.drools.DroolsActionHandler drlActionHandler;

declare SintechsSampling 
    @role( event )
end

declare SintechsSamplingSensor 
 	sampling_uuid : Timestamp
 	sensor : SintechsSensor 
	measure_type: String 
	value: Float
	rule_condition : Float
	created_at : Timestamp 
	updated_at : Timestamp 
end


rule "004-climatization_actuation"
dialect "mvel"
//no-loop true
    when
		$eventHandler : EventHandler()
		$sampling_list: List() from entry-point "StufaClimatizaionStream"
		$sampling : SintechsSampling( $sensors_sampling : samplingSensors, $actuators_sampling : samplingActuators) from $sampling_list
        $sampling_sensor : SintechsSamplingSensor(
    		(sensor.module.name == "arduino_climatization_board#1") 
    		&& (
	        	(measure_type == "heat_index" > rule_condition) ||
	        	(measure_type == "temperature" && value > rule_condition) ||
	        	(measure_type == "humidity" && value < rule_condition)
	        ) 
        ) from $sensors_sampling
    then
        //RuleEvent ev = new RuleEvent(drools.getRule().getName(),  $sampling, $sampling_sensor,
		//	"[arduino_board#1.DTH11#1] Sensação "+sampling_sensor.measure_type+" ativou condição empregada",
		//	"solenoid_1", true, "DTH11#1", "solenoid#1");
		//$eventHandler.addRuleEvent($sampling, ev);
		//modify($eventHandler);
		System.out.println("It works" + $sampling.hashCode() + " sensor: " + $sampling_sensor.getSensor().getUuid() + 
			 " measute_type: " + $sampling_sensor.getMeasure_type());
end
